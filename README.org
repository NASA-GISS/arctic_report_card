
#+PROPERTY: header-args:jupyter-python+ :session ARC2023

* Table of contents                               :toc_4:noexport:
- [[#introduction][Introduction]]
  - [[#mass-loss-from-citetmankoff_2021][Mass loss from citet:mankoff_2021]]
    - [[#baseline-mass-loss][Baseline mass loss]]
    - [[#2023-mass-loss][2023 mass loss]]
      - [[#calendar-year-through-next-week][Calendar year (through next week):]]
      - [[#hydrologic-year-through-next-week][Hydrologic year (through next week)]]
  - [[#discharge][Discharge]]
    - [[#baseline-discharge-1991-through-2020][Baseline discharge (1991 through 2020)]]
    - [[#average-since-2013][Average since 2013]]
    - [[#2023-discharge-through-july-31][2023 discharge through July 31]]
    - [[#trends][Trends]]
      - [[#all-gis][All GIS]]
      - [[#by-region][By region]]

* Introduction
:PROPERTIES:
:header-args: :session ARC :dir .
:END:

GISS contributions to the Arctic Report Card

** Mass loss from citet:mankoff_2021

#+BEGIN_SRC bash :exports both :results verbatim
# July 23 2023 v 609
# https://dataverse.geus.dk/file.xhtml?persistentId=doi:10.22008/FK2/OHI23Z/CU1ITY&version=609.0
wget https://dataverse.geus.dk/api/access/datafile/49986 -O MB_region.nc
#+END_SRC

*** Baseline mass loss

+ ~ 165 Gt yr-1

#+NAME: baseline_mass_loss
#+BEGIN_SRC jupyter-python :exports both :results verbatim
import xarray as xr
ds = xr.open_dataset("MB_region.nc")

print(ds\
      .sum(dim='region')\
      .sel({'time':slice('1991-01-01','2020-12-31')})\
      .mean()*365)
#+END_SRC

#+RESULTS: baseline_mass_loss
#+begin_example
<xarray.Dataset>
Dimensions:      ()
Data variables: (12/19)
    MB           float64 -165.0
    MB_err       float64 88.19
    MB_ROI       float64 -165.0
    MB_ROI_err   float64 151.5
    SMB          float64 323.5
    SMB_err      float64 29.12
    ...           ...
    BMB_err      float64 5.497
    BMB_ROI      float64 23.05
    BMB_ROI_err  float64 5.412
    MB_HIRHAM    float64 -169.2
    MB_MAR       float64 -152.5
    MB_RACMO     float64 -173.2
#+end_example

*** 2023 mass loss

**** Calendar year (through next week):

#+BEGIN_SRC bash :exports both :results verbatim
echo "day of year: " $(( $(date +%j) + 7 ))
#+END_SRC

#+RESULTS:
: day of year:  211

#+BEGIN_SRC jupyter-python :exports both
# print(ds.sum(dim='region').sel({'time':slice('2023-01-01','2023-12-31')}).mean()*211) 
print(ds.sum(dim='region').sel({'time':slice('2023-01-01','2023-12-31')}).sum())
#+END_SRC

#+RESULTS:
#+begin_example
<xarray.Dataset>
Dimensions:      ()
Data variables: (12/19)
    MB           float32 -183.4
    MB_err       float32 54.38
    MB_ROI       float32 -182.1
    MB_ROI_err   float32 91.18
    SMB          float32 113.4
    SMB_err      float32 10.21
    ...           ...
    BMB_err      float32 3.456
    BMB_ROI      float32 15.73
    BMB_ROI_err  float32 3.399
    MB_HIRHAM    float32 -94.94
    MB_MAR       float32 -220.8
    MB_RACMO     float32 0.0
#+end_example

**** Hydrologic year (through next week)

#+BEGIN_SRC jupyter-python :exports both
print(ds.sum(dim='region').sel({'time':slice('2022-09-01','2023-12-31')}).sum())
#+END_SRC

#+RESULTS:
#+begin_example
<xarray.Dataset>
Dimensions:      ()
Data variables: (12/19)
    MB           float32 -87.58
    MB_err       float32 85.75
    MB_ROI       float32 -86.28
    MB_ROI_err   float32 145.3
    SMB          float32 382.6
    SMB_err      float32 34.43
    ...           ...
    BMB_err      float32 5.256
    BMB_ROI      float32 22.77
    BMB_ROI_err  float32 5.172
    MB_HIRHAM    float32 19.51
    MB_MAR       float32 -143.6
    MB_RACMO     float32 0.0
#+end_example


** Discharge

+ Using v83 from https://dataverse.geus.dk/dataset.xhtml?persistentId=doi:10.22008/promice/data/ice_discharge/d/v02

*** Baseline discharge (1991 through 2020)

#+BEGIN_SRC jupyter-python :exports both
import xarray as xr
ds = xr.open_dataset("~/data/Mankoff_2020/ice/v83/region.nc").sum(dim='region')

df = ds[['discharge','err']].to_dataframe()['1990':]
df['1991-01-01':'2020-12-31':].mean()
df['1991-01-01':'2020-12-31':].resample('1D').interpolate().sum()/30/365
df['1991-01-01':'2020-12-31':].resample('1D').interpolate().mean()
#+END_SRC

#+RESULTS:
: discharge    465.426797
: err           43.289250
: dtype: float64



*** Average since 2013

#+BEGIN_SRC jupyter-python :exports both
df['2013-01-01':].resample('1D').interpolate().mean()
#+END_SRC

#+RESULTS:
: discharge    497.514989
: err           47.158456
: dtype: float64

*** 2023 discharge through July 31

#+BEGIN_SRC jupyter-python :exports both
df['2023-01-01':'2023-07-31'].resample('1D').interpolate().mean()
#+END_SRC

#+RESULTS:
: discharge    487.137623
: err           45.921724
: dtype: float64


*** Trends

See [[./figs_tmp]] sub-folder for graphics

**** All GIS

#+BEGIN_SRC jupyter-python :exports both
df['discharge'].resample('1D').interpolate().resample('YS').mean().plot(drawstyle='steps-post')
df['discharge'].resample('1D').interpolate().resample('YS').mean().tail()
#+END_SRC

#+RESULTS:
:RESULTS:
: time
: 2019-01-01    498.118339
: 2020-01-01    508.318805
: 2021-01-01    513.141345
: 2022-01-01    506.510392
: 2023-01-01    487.234749
: Freq: AS-JAN, Name: discharge, dtype: float64
[[file:./figs_tmp/9ccb0fe30c87122c5f37c13618cb8086e8ab1ad9.png]]
:END:

**** By region

#+BEGIN_SRC jupyter-python :exports both
dsR = xr.open_dataset("~/data/Mankoff_2020/ice/v83/region.nc")

# dsR = dsR['discharge'].resample({'time':'1D'}).interpolate().resample({'time':'MS'}).mean()
dsR = dsR['discharge'].resample({'time':'1D'}).interpolate().resample({'time':'YS'}).mean()
_ = dsR.plot.line(x='time', drawstyle='steps-post')
#+END_SRC

#+RESULTS:
[[file:./figs_tmp/6742799f03de95bf9f5ff1e2cb55c7c1e55ede79.png]]
